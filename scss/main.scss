// importing my variables
@import 'partials/my-variables';
@import 'partials/my-mixins';

// importing the font (I'll need to trim this down at some point)
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

// import the bootstrap functions
@import "../node_modules/bootstrap/scss/_functions";

// import the bootstrap variables
@import "../node_modules/bootstrap/scss/_variables";

// merge my custom colours to the theme colours map
$theme-colors: map-merge($custom-theme-colors, $theme-colors);

// make my colours work properly
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");
$utilities-colors: map-merge(
  $theme-colors-rgb,
  (
    "black": to-rgb($black),
    "white": to-rgb($white),
    "body":  to-rgb($body-color)
  )
);
$utilities-text-colors: map-loop($utilities-colors, rgba-css-var, "$key", "text");
$utilities-bg-colors: map-loop($utilities-colors, rgba-css-var, "$key", "bg");

// import hamburgers
@import '../hamburgers/hamburgers';

// import  the rest of the bootstrap sass lib
@import '../node_modules/bootstrap/scss/bootstrap';

// import my bootstrap overrides
@import 'partials/bootstrap-override';

// import my transitions & transforms
@import 'partials/my-tnt';


/* this lot need sorting */
body {
  color: $altDark;
}

h2 {
  font-size: 1.25rem;
  padding-bottom: 17px;
}

.card-body {
  padding: 30px;
}

.card-text {
  font-size: 0.8125rem;
  line-height: 1.375rem;
}

h1,
h4,
#main-nav,
.btn {
    text-transform: uppercase;
}

#main-nav,
#main-nav a,
#about,
footer {
    background: $altDark;
    color: white;
} 

h1 {
  font-weight: 400 !important;
  font-size: 2.25rem;
  margin-bottom: 28px;
}

#newsletter {
    background: $newsletter;
}

small {
  font-size: 10px;
}

.hamburger {
  font-size: 12px;
  line-height: 12px;
}

#about {
  background-image: url('../img/net-back.png');
}

.avatar {
  border-radius: 50%;
}

.hero {
  background-image: url('../img/carousel/web-design.jpeg');
  height: calc(100vh - 181px); // This works fine for large and upwards but needs a different solution to cover small and medium
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

// these should probably be dealt with in the btn rules
.btn {
  color: white;
}

.btn-light {
  color: $altDark;
}

// This is just here to help me out :-/
.frame-up {
  border: solid 1px red;
}

@each $name, $colour in ($service-colours) {
  .#{$name} {
    i {
      @include circle-icon;
      background-color: $colour;
    }
    &:hover {
      color: white;
      background-color: $colour;
      i, .btn {
        color: $colour;
        background-color: white;
      }
    }
  }
}